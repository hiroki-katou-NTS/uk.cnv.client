import org.gradle.api.Project

apply plugin: 'java'
apply plugin: 'eclipse'

buildscript {
	ext {
		version = "1.0.0"
		localRepo = "$rootDir/../uk.repo"
	}

	repositories {
		// use local repository
		flatDir {
			dirs localRepo
	 	}
	}

	dependencies {
		// compress js plugin
		classpath 'com.eriwen:gradle-js-plugin:1.12.0'

		classpath "com.bmuschko:gradle-cargo-plugin:2.2.1"

		classpath "de.aaschmid.gradle.plugins:gradle-cpd-plugin:0.5"

		// compile typescript to js  plugin
		classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"

		classpath "de.richsource.gradle.plugins:typescript-gradle-plugin:1.8.0"
	}
}

//すべてのプロジェクトに適応すべき内容はここに追記する
allprojects {
	apply from: "$rootDir/gradle/properties.gradle"
	apply from: "$rootDir/gradle/library_properties.gradle"

	//ビルド及び実行は、Java8を対象とする
	sourceCompatibility = "$javaVersion"
	targetCompatibility = "$javaVersion"

	task cleanandbuildallproject (dependsOn: ['clean', 'build']) { }
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'eclipse-wtp'

	repositories {
		// use local repository
		flatDir {
			dirs localRepo
	 	}
	 	maven {
            url "https://mvnrepository.com/artifact"
        }
	}

	//compileJavaとcompileTestJavaの実行時の断�コードをunicodeで挮
	[compileJava, compileTestJava]*.options*.encoding = "$defaultEncoding"

	task upver (type: Copy, dependsOn: ['compileJava', 'jar']) {
        from "build/libs"
		into "$rootDir/../uk.repo"
        include "*.jar"
        exclude "*web.jar"
	}

	dependencies {
		// Apache commons lang
		compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'

		// Lombok
		compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'

		// JUnit
		testCompile group: 'junit', name: 'junit', version: '4.12'
		testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
		testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'

		// AssertJ
		testCompile group: 'org.assertj', name: 'assertj-core', version: '3.13.2'

		// JMockit
		testCompile group: 'org.jmockit', name: 'jmockit', version: '1.28'

		// CDI
		compileOnly group: 'javax.enterprise', name: 'cdi-api', version: '1.2'

		// EJB
		compileOnly group: 'javax.ejb', name: 'javax.ejb-api', version: '3.2'

		// inject
		compile group: 'javax.inject', name: 'javax.inject', version: '1'

		// transaction
		compile group: 'javax.transaction', name: 'javax.transaction-api', version: '1.2'

		// interceptor
		compile group: 'javax.interceptor', name: 'javax.interceptor-api', version: '1.2'

		// validation
		compile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'

		// json parser
		compile group: 'org.glassfish', name: 'javax.json', version: '1.0.4'

		// Concurrency Utilities for Java EE
		compile group: 'javax.enterprise.concurrent', name: 'javax.enterprise.concurrent-api', version: '1.0'

		// JPA
		compile group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.1.1'
		compile group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.6.4'

		// JAX-RS
		compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'

		// Jackson
		compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.3'
		compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.3'
		compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.9.3'

		// servlet
		compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

		// Log4J
		compile group: 'log4j', name: 'log4j', version: '1.2.17'
		compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.15.0'
		compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.15.0'

		// SLF4J
		compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.22'

        // Apache commons CSV
		compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'

        // Apache commons IO
		compile group: 'commons-io', name: 'commons-io', version: '2.5'

		// https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
		compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'

		// HttpClient
		compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
		compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.9'

		// For Login feature.
		// https://mvnrepository.com/artifact/com.github.dblock.waffle/waffle-jna
		compile group: 'com.github.dblock.waffle', name: 'waffle-jna', version: '1.8.1'
		// https://mvnrepository.com/artifact/com.google.guava/guava
		compile group: 'com.google.guava', name: 'guava', version: '23.0'
		// https://mvnrepository.com/artifact/net.java.dev.jna/jna
		compile group: 'net.java.dev.jna', name: 'jna', version: '4.4.0'
		// https://mvnrepository.com/artifact/net.java.dev.jna/jna-platform
		compile group: 'net.java.dev.jna', name: 'jna-platform', version: '4.4.0'

        compile group: 'nts.gul', name: 'nts.gul', version: version
        compile group: 'nts.arc', name: 'nts.arc', version: version

		// https://mvnrepository.com/artifact/com.github.jsqlparser/jsqlparser
		compile group: 'com.github.jsqlparser', name: 'jsqlparser', version: '3.2'
	}
}

project (':nts.uk.cnv.core') {
	dependencies {
        compile group: 'nemunoki', name: 'nemunoki.oruta.shr', version: version
	}
}

project (':nts.uk.cnv.web') {
	apply plugin: 'war'
	apply plugin: 'com.moowork.node'
	apply plugin: 'de.richsource.gradle.plugins.typescript'

	war {
		exclude '**/*.ts'
		exclude '**/*.js.map'
		baseName= "nts.uk.cnv.web"
		includeEmptyDirs false
	}

	dependencies {
        compile group: 'nemunoki', name: 'nemunoki.oruta.shr', version: version
        compile group: 'nemunoki', name: 'nemunoki.oruta.shr', version: version
        compile group: 'uk.cnv.core', name: 'nts.uk.cnv.core'
	}

	task tsc(type: de.richsource.gradle.plugins.typescript.CompileTypeScript) {
		target = "ES5"
		noLib = true
		watch = false
		sourcemap = !project.hasProperty('sourceMap') || sourceMap == 'true'
		include '**/*.ts'
		source = new File('src/main/webapp/view')
		outputDir = new File('src/main/webapp/view')
	}

	task tscw(type: de.richsource.gradle.plugins.typescript.CompileTypeScript) {
		target = "ES5"
		noLib = true
		watch = true
		sourcemap = !project.hasProperty('sourceMap') || sourceMap == 'true'
		include '**/*.ts'
		source = new File('src/main/webapp/view')
		outputDir = new File('src/main/webapp/view')
	}
}
